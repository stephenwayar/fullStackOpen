{"ast":null,"code":"var _jsxFileName = \"/Users/stephenwayar/Desktop/ME/CODE/Repos/FullStackOpen/part_2/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Result from \"./components/Result.component\";\nimport Country from \"./components/country\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n  const [singleCountry, setSingleCountry] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"https://restcountries.com/v3.1/all\").then(res => {\n      console.log(\"Promise passed!\");\n      const countryNames = res.data.map(datum => datum.name.common);\n      const countryData = res.data.map(datum => datum);\n      setCountries(countryNames);\n      setSingleCountry(countryData);\n    });\n  }, []);\n\n  const handleSearch = e => setSearch(e.target.value);\n\n  const filteredResult = countries.filter(country => country.toLowerCase().includes(search.toLowerCase())).map((filtered, index) => /*#__PURE__*/_jsxDEV(Result, {\n    result: filtered\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this));\n  let sum = \"\";\n\n  if (filteredResult.length === 1) {\n    sum = singleCountry.filter(country => country.name.common.toLowerCase().includes(search.toLowerCase())).map((filtered, index) => /*#__PURE__*/_jsxDEV(Country, {\n      name: filtered,\n      capital: filtered,\n      population: filtered,\n      flags: filtered,\n      languages: filtered\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this));\n  } else if (filteredResult.length > 0 && filteredResult.length < 11) {\n    sum = filteredResult;\n  } else if (search === \"\") {\n    sum = \"\";\n  } else if (filteredResult.length > 11) {\n    sum = \"Too many matches, specify another query\";\n  } else if (search !== filteredResult) {\n    sum = \"Country not found\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Find countries:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: search,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: sum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/stephenwayar/Desktop/ME/CODE/Repos/FullStackOpen/part_2/src/App.js"],"names":["React","useEffect","useState","axios","Result","Country","App","countries","setCountries","singleCountry","setSingleCountry","search","setSearch","get","then","res","console","log","countryNames","data","map","datum","name","common","countryData","handleSearch","e","target","value","filteredResult","filter","country","toLowerCase","includes","filtered","index","sum","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Result from \"./components/Result.component\";\nimport Country from \"./components/country\";\n\nconst App = () => {\n\n  const [countries, setCountries] = useState([])\n  const [singleCountry, setSingleCountry] = useState([])\n  const [search, setSearch] = useState(\"\")\n\n  useEffect(() => {\n    axios\n      .get(\"https://restcountries.com/v3.1/all\")\n      .then(res => {\n      console.log(\"Promise passed!\");\n\n      const countryNames = res.data.map(datum => (\n        datum.name.common\n      ))\n\n      const countryData = res.data.map(datum => datum)\n\n      setCountries(countryNames)\n      setSingleCountry(countryData)\n    })\n  }, [])\n\n  const handleSearch = e => setSearch(e.target.value)\n\n  const filteredResult = countries\n    .filter(country => country\n    .toLowerCase()\n    .includes(search.toLowerCase()))\n    .map((filtered, index) => (\n      <Result \n        key={index} \n        result={filtered}\n      />\n    ))\n\n  let sum = \"\"\n\n  if(filteredResult.length === 1){\n    sum =  singleCountry\n      .filter(country => country.name.common\n      .toLowerCase()\n      .includes(search.toLowerCase()))\n      .map((filtered, index) => (\n        <Country \n          key={index} \n          name={filtered} \n          capital={filtered} \n          population={filtered} \n          flags={filtered}\n          languages={filtered}\n        />\n      ))\n  }\n  else if(filteredResult.length > 0 \n    && \n    filteredResult.length < 11) {\n    sum = filteredResult\n  }\n  else if(search === \"\"){\n    sum = \"\"\n  }\n  else if(filteredResult.length > 11){\n    sum = \"Too many matches, specify another query\"\n  }\n  else if(search !== filteredResult){\n    sum = \"Country not found\"\n  }\n\n  return(\n    <div>\n      <label>Find countries:</label>\n      <input value={search} onChange={handleSearch}/>\n      <p>{sum}</p>\n    </div>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}