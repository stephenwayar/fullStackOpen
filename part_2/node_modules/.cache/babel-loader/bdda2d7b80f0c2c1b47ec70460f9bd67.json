{"ast":null,"code":"var _jsxFileName = \"/Users/stephenwayar/Desktop/ME/CODE/Repos/FullStackOpen/part_2/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useEffect, useRef, useState } from \"react\"; // import Result from \"./components/Result.component\";\n// import axios from \"axios\";\n// const App = () => {\n//   const [countries, setCountries] = useState([])\n//   const [search, setSearch] = useState(\"\")\n//   useEffect(() => {\n//     axios.get(\"https://restcountries.com/v3.1/all\").then(res => {\n//       console.log(\"Promise passed!\");\n//       const data = res.data.map(datum => (datum.name.common))\n//       setCountries(data)\n//     })\n//   }, [])\n//   const handleSearch = e => setSearch(e.target.value)\n//   const filteredResult = countries.filter(country => country.toLowerCase().includes(search.toLowerCase())).map((filtered, index) => (<Result key={index} result={filtered}/>))\n//   let sum = \"\"\n//   if(filteredResult.length > 0 && filteredResult.length < 11) {\n//     sum = filteredResult\n//   }\n//   else if(search === \"\"){\n//     sum = \"\"\n//   }\n//   else if(filteredResult.length > 11){\n//     sum = \"Too many matches, specify another query\"\n//   }\n//   else if (search !== filteredResult){\n//     sum = \"Country not found\"\n//   }\n//   return(\n//     <div>\n//       <label>Find countries:</label>\n//       <input value={search} onChange={handleSearch}/>\n//       <p>{sum}</p>\n//     </div>\n//   )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const inputRef = useRef();\n  useEffect(() => {\n    console.log(inputRef.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        ref: inputRef,\n        children: \" hello \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Data.Provider, {\n      value: bool,\n      children: /*#__PURE__*/_jsxDEV(ContextDispatcher, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"cBQ6FQ+sf5H+lvNONLKqtm4aeQ8=\");\n\n_c = App;\n\nconst ContextDispatcher = props => {\n  return /*#__PURE__*/_jsxDEV(Comp1, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ContextDispatcher;\n\nconst Comp1 = () => {\n  _s2();\n\n  const contextData = useContext(Data);\n  console.log(contextData);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: contextData ? \"true\" : \"false\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Comp1, \"I5MrpC2Uz/0aJ08OhAJq00IYFY4=\");\n\n_c3 = Comp1;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ContextDispatcher\");\n$RefreshReg$(_c3, \"Comp1\");","map":{"version":3,"sources":["/Users/stephenwayar/Desktop/ME/CODE/Repos/FullStackOpen/part_2/src/App.js"],"names":["React","createContext","useContext","useEffect","useRef","useState","App","inputRef","console","log","current","bool","ContextDispatcher","props","Comp1","contextData","Data"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,MAAtD,EAA8DC,QAA9D,QAA8E,OAA9E,C,CACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAMC,QAAQ,GAAGH,MAAM,EAAvB;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,OAArB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAA,6BACE;AAAI,QAAA,GAAG,EAAEH,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD,CAAM,QAAN;AAAe,MAAA,KAAK,EAAEI,IAAtB;AAAA,6BACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnBD;;GAAML,G;;KAAAA,G;;AAqBN,MAAMM,iBAAiB,GAAIC,KAAD,IAAW;AACnC,sBACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;MAAMD,iB;;AAMN,MAAME,KAAK,GAAG,MAAM;AAAA;;AAElB,QAAMC,WAAW,GAAGb,UAAU,CAACc,IAAD,CAA9B;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAYM,WAAZ;AACA,sBACE;AAAA,cAAIA,WAAW,GAAG,MAAH,GAAY;AAA3B;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAPD;;IAAMD,K;;MAAAA,K;AAQN,eAAeR,GAAf","sourcesContent":["import React, { createContext, useContext, useEffect, useRef, useState } from \"react\";\n// import Result from \"./components/Result.component\";\n// import axios from \"axios\";\n\n// const App = () => {\n\n//   const [countries, setCountries] = useState([])\n//   const [search, setSearch] = useState(\"\")\n\n//   useEffect(() => {\n//     axios.get(\"https://restcountries.com/v3.1/all\").then(res => {\n//       console.log(\"Promise passed!\");\n//       const data = res.data.map(datum => (datum.name.common))\n//       setCountries(data)\n//     })\n//   }, [])\n  \n//   const handleSearch = e => setSearch(e.target.value)\n\n//   const filteredResult = countries.filter(country => country.toLowerCase().includes(search.toLowerCase())).map((filtered, index) => (<Result key={index} result={filtered}/>))\n\n//   let sum = \"\"\n\n//   if(filteredResult.length > 0 && filteredResult.length < 11) {\n//     sum = filteredResult\n//   }\n//   else if(search === \"\"){\n//     sum = \"\"\n//   }\n//   else if(filteredResult.length > 11){\n//     sum = \"Too many matches, specify another query\"\n//   }\n//   else if (search !== filteredResult){\n//     sum = \"Country not found\"\n//   }\n\n//   return(\n//     <div>\n//       <label>Find countries:</label>\n//       <input value={search} onChange={handleSearch}/>\n//       <p>{sum}</p>\n//     </div>\n//   )\n// }\n\n\nconst App = () => {\n\n  const inputRef = useRef()\n\n\n  useEffect(() => {\n    console.log(inputRef.current);\n  }, [])\n\n  return(\n    <div>\n      <form>\n        <h1 ref={inputRef}> hello </h1>\n      </form>\n      <Data.Provider value={bool}>\n        <ContextDispatcher />\n      </Data.Provider>\n    </div>\n  )\n}\n\nconst ContextDispatcher = (props) => {\n  return(\n    <Comp1 />\n  )\n}\n\nconst Comp1 = () => {\n\n  const contextData = useContext(Data)\n  console.log(contextData);\n  return(\n    <p>{contextData ? \"true\" : \"false\"}</p>\n  )\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}