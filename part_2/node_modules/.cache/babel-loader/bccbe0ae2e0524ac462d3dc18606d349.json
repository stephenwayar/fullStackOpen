{"ast":null,"code":"var _jsxFileName = \"/Users/stephenwayar/Desktop/ME/CODE/Repos/fullStackOpen/part_2/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Note from \"./components/note.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  const [notes, setNotes] = useState([]);\n  const [newNotes, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/notes\").then(res => {\n      console.log(\"Promise fufilled\");\n      setNotes(res.data);\n    });\n  }, []);\n  console.log(\"render\", notes.length, \"notes\");\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true);\n  const noteObject = {\n    id: notes.lenght + 1,\n    content: newNotes,\n    date: new Date().toDateString,\n    important: Math.random() < 0.5\n  };\n  useEffect(() => {\n    axios;\n  });\n\n  const addNote = e => {\n    e.preventDefault();\n    setNotes(notes.concat(noteObject));\n    setNewNote(\"\");\n  };\n\n  const handleChange = e => setNewNote(e.target.value);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowAll(!showAll),\n      children: [\"show \", showAll ? \"important\" : \"all\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        id: note.id,\n        note: note\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 35\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Note:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNotes,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/stephenwayar/Desktop/ME/CODE/Repos/fullStackOpen/part_2/src/App.js"],"names":["React","useEffect","useState","axios","Note","App","props","notes","setNotes","newNotes","setNewNote","showAll","setShowAll","get","then","res","console","log","data","length","notesToShow","filter","note","important","noteObject","id","lenght","content","date","Date","toDateString","Math","random","addNote","e","preventDefault","concat","handleChange","target","value","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAErB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,UAAX,IAAyBR,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACU,GAAN,CAAU,6BAAV,EAAyCC,IAAzC,CAA8CC,GAAG,IAAI;AACnDC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAT,MAAAA,QAAQ,CAACO,GAAG,CAACG,IAAL,CAAR;AACD,KAHD;AAID,GALQ,EAKP,EALO,CAAT;AAOAF,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBV,KAAK,CAACY,MAA5B,EAAoC,OAApC;AAEA,QAAMC,WAAW,GAAGT,OAAO,GACvBJ,KADuB,GAEvBA,KAAK,CAACc,MAAN,CAAaC,IAAI,IAAKA,IAAI,CAACC,SAAL,KAAmB,IAAzC,CAFJ;AAIE,QAAMC,UAAU,GAAG;AACjBC,IAAAA,EAAE,EAAElB,KAAK,CAACmB,MAAN,GAAe,CADF;AAEjBC,IAAAA,OAAO,EAAElB,QAFQ;AAGjBmB,IAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,YAHA;AAIjBP,IAAAA,SAAS,EAAEQ,IAAI,CAACC,MAAL,KAAgB;AAJV,GAAnB;AAOA/B,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK;AACN,GAFQ,CAAT;;AAIF,QAAM8B,OAAO,GAAGC,CAAC,IAAI;AACnBA,IAAAA,CAAC,CAACC,cAAF;AAEA3B,IAAAA,QAAQ,CAACD,KAAK,CAAC6B,MAAN,CAAaZ,UAAb,CAAD,CAAR;AACAd,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GALD;;AAOA,QAAM2B,YAAY,GAAGH,CAAC,IAAIxB,UAAU,CAACwB,CAAC,CAACI,MAAF,CAASC,KAAV,CAApC;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAO3B,UAAU,CAAC,CAACD,OAAF,CAAlC;AAAA,0BACQA,OAAO,GAAG,WAAH,GAAiB,KADhC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAOE;AAAA,gBACGS,WAAW,CAACoB,GAAZ,CAAgBlB,IAAI,iBAAK,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEA,IAAI,CAACG,EAAf;AAAmB,QAAA,IAAI,EAAEH;AAAzB;AAAA;AAAA;AAAA;AAAA,cAAzB;AADH;AAAA;AAAA;AAAA;AAAA,YAPF,eAWE;AAAM,MAAA,QAAQ,EAAEW,OAAhB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,KAAK,EAAExB,QAAd;AAAwB,QAAA,QAAQ,EAAE4B;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA1DD;;AA2DA,eAAehC,GAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Note from \"./components/note.component\";\n\nconst App = (props) => {\n\n  const [notes, setNotes] = useState([])\n  const [newNotes, setNewNote] = useState(\"\")\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/notes\").then(res => {\n      console.log(\"Promise fufilled\");\n      setNotes(res.data)\n    })\n  },[])\n\n  console.log(\"render\", notes.length, \"notes\");\n\n  const notesToShow = showAll \n    ? notes\n    : notes.filter(note => (note.important === true))\n\n    const noteObject = {\n      id: notes.lenght + 1,\n      content: newNotes,\n      date: new Date().toDateString,\n      important: Math.random() < 0.5\n    }\n\n    useEffect(() => {\n      axios\n    })\n\n  const addNote = e => {\n    e.preventDefault()\n\n    setNotes(notes.concat(noteObject))\n    setNewNote(\"\")\n  }\n\n  const handleChange = e => setNewNote(e.target.value)\n\n  return(\n    <div>\n      <h1>Notes</h1>\n      {/* Show important notes feature */}\n      <button onClick={() => (setShowAll(!showAll))}>\n        show {showAll ? \"important\" : \"all\"}\n      </button>\n      {/*  */}\n      <ul>\n        {notesToShow.map(note => (<Note id={note.id} note={note}/>))}\n      </ul>\n\n      <form onSubmit={addNote}>\n        <label>Enter Note:</label>\n        <input value={newNotes} onChange={handleChange}/>\n        <button>Submit</button>\n      </form>\n    </div>\n  )\n} \nexport default App;"]},"metadata":{},"sourceType":"module"}