{"ast":null,"code":"var _jsxFileName = \"/Users/stephenwayar/Desktop/ME/CODE/Repos/fullStackOpen/part_2/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Note from \"./components/note.component\";\nimport noteService from \"./services/notes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNotes, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    noteService.getAll();\n    setNotes(res.data);\n  }, []);\n  console.log(\"rendered\", notes.length, \"notes\");\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true);\n\n  const addNote = e => {\n    e.preventDefault();\n    const noteObject = {\n      id: notes.lenght + 1,\n      content: newNotes,\n      date: new Date().toDateString,\n      important: Math.random() < 0.5\n    };\n    noteService.create(noteObject).then(res => {\n      setNotes(notes.concat(res.data));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleChange = e => setNewNote(e.target.value);\n\n  const toggleImportanceOf = id => {\n    // const url = `http://localhost:3001/notes/${id}`\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(response => {\n      setNotes(notes.map(note => note.id !== id ? note : response.data));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowAll(!showAll),\n      children: [\"show \", showAll ? \"important\" : \"all\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        id: note.id,\n        note: note,\n        toggleImportance: () => toggleImportanceOf(note.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Note:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNotes,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/stephenwayar/Desktop/ME/CODE/Repos/fullStackOpen/part_2/src/App.js"],"names":["React","useEffect","useState","axios","Note","noteService","App","notes","setNotes","newNotes","setNewNote","showAll","setShowAll","getAll","res","data","console","log","length","notesToShow","filter","note","important","addNote","e","preventDefault","noteObject","id","lenght","content","date","Date","toDateString","Math","random","create","then","concat","handleChange","target","value","toggleImportanceOf","find","n","changedNote","update","response","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEhB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,UAAX,IAAyBR,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,WAAW,CAACQ,MAAZ;AACAL,IAAAA,QAAQ,CAACM,GAAG,CAACC,IAAL,CAAR;AAED,GAJQ,EAIP,EAJO,CAAT;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBV,KAAK,CAACW,MAA9B,EAAsC,OAAtC;AAEA,QAAMC,WAAW,GAAGR,OAAO,GACvBJ,KADuB,GAEvBA,KAAK,CAACa,MAAN,CAAaC,IAAI,IAAKA,IAAI,CAACC,SAAL,KAAmB,IAAzC,CAFJ;;AAIA,QAAMC,OAAO,GAAGC,CAAC,IAAI;AACnBA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,EAAE,EAAEpB,KAAK,CAACqB,MAAN,GAAe,CADF;AAEjBC,MAAAA,OAAO,EAAEpB,QAFQ;AAGjBqB,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,YAHA;AAIjBV,MAAAA,SAAS,EAAEW,IAAI,CAACC,MAAL,KAAgB;AAJV,KAAnB;AAOE7B,IAAAA,WAAW,CAAC8B,MAAZ,CAAmBT,UAAnB,EACCU,IADD,CACMtB,GAAG,IAAI;AACXN,MAAAA,QAAQ,CAACD,KAAK,CAAC8B,MAAN,CAAavB,GAAG,CAACC,IAAjB,CAAD,CAAR;AACAL,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD,KAJD;AAKH,GAfD;;AAiBA,QAAM4B,YAAY,GAAGd,CAAC,IAAId,UAAU,CAACc,CAAC,CAACe,MAAF,CAASC,KAAV,CAApC;;AAEA,QAAMC,kBAAkB,GAAGd,EAAE,IAAI;AAC/B;AACA,UAAMN,IAAI,GAAGd,KAAK,CAACmC,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAAChB,EAAF,KAASA,EAAzB,CAAb;AACA,UAAMiB,WAAW,GAAG,EAAE,GAAGvB,IAAL;AAAWC,MAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AAA5B,KAApB;AAEAjB,IAAAA,WAAW,CAACwC,MAAZ,CAAmBlB,EAAnB,EAAuBiB,WAAvB,EAAoCR,IAApC,CAAyCU,QAAQ,IAAI;AACnDtC,MAAAA,QAAQ,CAACD,KAAK,CAACwC,GAAN,CAAU1B,IAAI,IAAIA,IAAI,CAACM,EAAL,KAAYA,EAAZ,GAAiBN,IAAjB,GAAwByB,QAAQ,CAAC/B,IAAnD,CAAD,CAAR;AACD,KAFD;AAGD,GARD;;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAOH,UAAU,CAAC,CAACD,OAAF,CAAlC;AAAA,0BACQA,OAAO,GAAG,WAAH,GAAiB,KADhC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAOE;AAAA,gBACGQ,WAAW,CAAC4B,GAAZ,CAAgB1B,IAAI,iBACnB,QAAC,IAAD;AACE,QAAA,EAAE,EAAEA,IAAI,CAACM,EADX;AAEE,QAAA,IAAI,EAAEN,IAFR;AAGE,QAAA,gBAAgB,EAAE,MAAMoB,kBAAkB,CAACpB,IAAI,CAACM,EAAN;AAH5C;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAPF,eAiBE;AAAM,MAAA,QAAQ,EAAEJ,OAAhB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,KAAK,EAAEd,QAAd;AAAwB,QAAA,QAAQ,EAAE6B;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAxED;;AAyEA,eAAehC,GAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Note from \"./components/note.component\";\nimport noteService from \"./services/notes\"\n\nconst App = () => {\n\n  const [notes, setNotes] = useState([])\n  const [newNotes, setNewNote] = useState(\"\")\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    noteService.getAll()\n    setNotes(res.data)      \n    \n  },[])\n\n  console.log(\"rendered\", notes.length, \"notes\");\n\n  const notesToShow = showAll \n    ? notes\n    : notes.filter(note => (note.important === true))\n\n  const addNote = e => {\n    e.preventDefault()\n\n    const noteObject = {\n      id: notes.lenght + 1,\n      content: newNotes,\n      date: new Date().toDateString,\n      important: Math.random() < 0.5\n    }\n\n      noteService.create(noteObject)\n      .then(res => {\n        setNotes(notes.concat(res.data))\n        setNewNote(\"\")\n      })\n  }\n\n  const handleChange = e => setNewNote(e.target.value)\n\n  const toggleImportanceOf = id => {\n    // const url = `http://localhost:3001/notes/${id}`\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService.update(id, changedNote).then(response => {\n      setNotes(notes.map(note => note.id !== id ? note : response.data))\n    })\n  }\n\n  return(\n    <div>\n      <h1>Notes</h1>\n      {/* Show important notes feature */}\n      <button onClick={() => (setShowAll(!showAll))}>\n        show {showAll ? \"important\" : \"all\"}\n      </button>\n      {/*  */}\n      <ul>\n        {notesToShow.map(note => (\n          <Note \n            id={note.id} \n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n\n      <form onSubmit={addNote}>\n        <label>Enter Note:</label>\n        <input value={newNotes} onChange={handleChange}/>\n        <button>Submit</button>\n      </form>\n    </div>\n  )\n} \nexport default App;"]},"metadata":{},"sourceType":"module"}