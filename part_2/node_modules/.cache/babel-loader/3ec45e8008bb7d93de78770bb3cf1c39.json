{"ast":null,"code":"var _jsxFileName = \"/Users/stephenwayar/Desktop/ME/CODE/Repos/fullStackOpen/part_2/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Note from \"./components/note.component\";\nimport Notification from \"./components/notifcation.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNotes, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"some error happened\");\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/notes\").then(res => {\n      console.log(\"Promise fufilled\");\n      setNotes(res.data);\n    });\n  }, []);\n  console.log(\"rendered\", notes.length, \"notes\");\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true);\n\n  const addNote = e => {\n    e.preventDefault();\n    const noteObject = {\n      id: notes.lenght + 1,\n      content: newNotes,\n      date: new Date().toDateString,\n      important: Math.random() < 0.5\n    };\n    axios.post(\"http://localhost:3001/notes\", noteObject).then(res => {\n      setNotes(notes.concat(res.data));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleChange = e => setNewNote(e.target.value);\n\n  const toggleImportanceOf = id => {\n    console.log('importance of ' + id + ' needs to be toggled');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowAll(!showAll),\n      children: [\"show \", showAll ? \"important\" : \"all\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        id: note.id,\n        note: note,\n        toggleImportance: () => toggleImportanceOf(note.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Note:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNotes,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/stephenwayar/Desktop/ME/CODE/Repos/fullStackOpen/part_2/src/App.js"],"names":["React","useEffect","useState","axios","Note","Notification","App","notes","setNotes","newNotes","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","get","then","res","console","log","data","length","notesToShow","filter","note","important","addNote","e","preventDefault","noteObject","id","lenght","content","date","Date","toDateString","Math","random","post","concat","handleChange","target","value","toggleImportanceOf","map"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Note from \"./components/note.component\";\nimport Notification from \"./components/notifcation.component\";\n\nconst App = () => {\n\n  const [notes, setNotes] = useState([])\n  const [newNotes, setNewNote] = useState(\"\")\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(\"some error happened\")\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/notes\").then(res => {\n      console.log(\"Promise fufilled\");\n      setNotes(res.data)\n    })\n  },[])\n\n  console.log(\"rendered\", notes.length, \"notes\");\n\n  const notesToShow = showAll \n    ? notes\n    : notes.filter(note => (note.important === true))\n\n  const addNote = e => {\n    e.preventDefault()\n\n    const noteObject = {\n      id: notes.lenght + 1,\n      content: newNotes,\n      date: new Date().toDateString,\n      important: Math.random() < 0.5\n    }\n\n    axios\n      .post(\"http://localhost:3001/notes\", noteObject)\n      .then(res => {\n        setNotes(notes.concat(res.data))\n        setNewNote(\"\")\n      })\n  }\n\n  const handleChange = e => setNewNote(e.target.value)\n\n  const toggleImportanceOf = (id) => {\n    console.log('importance of ' + id + ' needs to be toggled')\n  }\n\n  return(\n    <div>\n      <h1>Notes</h1>\n \n       <button onClick={() => (setShowAll(!showAll))}>\n        show {showAll ? \"important\" : \"all\"}\n      </button>\n\n      <Notification message={errorMessage}/>\n\n      <ul>\n        {notesToShow.map(note => (\n          <Note \n            id={note.id} \n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n\n      <form onSubmit={addNote}>\n        <label>Enter Note:</label>\n        <input value={newNotes} onChange={handleChange}/>\n        <button>Submit</button>\n      </form>\n    </div>\n  )\n} \nexport default App;"]},"metadata":{},"sourceType":"module"}