{"ast":null,"code":"var _jsxFileName = \"/Users/stephenwayar/Desktop/ME/CODE/Repos/FullStackOpen/part_2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Result from \"./components/Result.component\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [filteredresult, setFilteredResult] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"https://restcountries.com/v3.1/all\").then(res => {\n      console.log(\"Promise passed!\");\n      const data = res.data.map(datum => datum.name.common);\n      setCountries(data);\n    });\n  }, []);\n  const filtered = countries.filter(country => country.includes(search));\n  setFilteredResult(search);\n\n  const handleSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Find countries:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: search,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), search.map((filtered, index) => /*#__PURE__*/_jsxDEV(Result, {\n      result: filtered\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 41\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Z9pw1a36xiKr46tcBZJqoJ/f+ZM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/stephenwayar/Desktop/ME/CODE/Repos/FullStackOpen/part_2/src/App.js"],"names":["React","useEffect","useState","Result","axios","App","countries","setCountries","search","setSearch","filteredresult","setFilteredResult","get","then","res","console","log","data","map","datum","name","common","filtered","filter","country","includes","handleSearch","e","target","value","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CAACQ,GAAN,CAAU,oCAAV,EAAgDC,IAAhD,CAAqDC,GAAG,IAAI;AAC1DC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,YAAMC,IAAI,GAAGH,GAAG,CAACG,IAAJ,CAASC,GAAT,CAAaC,KAAK,IAAKA,KAAK,CAACC,IAAN,CAAWC,MAAlC,CAAb;AACAd,MAAAA,YAAY,CAACU,IAAD,CAAZ;AACD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,QAAMK,QAAQ,GAAGhB,SAAS,CAACiB,MAAV,CAAiBC,OAAO,IAAIA,OAAO,CAACC,QAAR,CAAiBjB,MAAjB,CAA5B,CAAjB;AACAG,EAAAA,iBAAiB,CAACH,MAAD,CAAjB;;AAGA,QAAMkB,YAAY,GAAGC,CAAC,IAAI;AACxBlB,IAAAA,SAAS,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,KAAK,EAAErB,MAAd;AAAsB,MAAA,QAAQ,EAAEkB;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGlB,MAAM,CAACU,GAAP,CAAW,CAACI,QAAD,EAAWQ,KAAX,kBAAsB,QAAC,MAAD;AAAoB,MAAA,MAAM,EAAER;AAA5B,OAAaQ,KAAb;AAAA;AAAA;AAAA;AAAA,YAAjC,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA7BD;;GAAMzB,G;;KAAAA,G;AA8BN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Result from \"./components/Result.component\";\nimport axios from \"axios\";\n\nconst App = () => {\n\n  const [countries, setCountries] = useState([])\n  const [search, setSearch] = useState(\"\")\n  const [filteredresult, setFilteredResult] = useState(\"\")\n\n  useEffect(() => {\n    axios.get(\"https://restcountries.com/v3.1/all\").then(res => {\n      console.log(\"Promise passed!\");\n      const data = res.data.map(datum => (datum.name.common))\n      setCountries(data)\n    })\n  }, [])\n  \n  const filtered = countries.filter(country => country.includes(search))\n  setFilteredResult(search)\n\n\n  const handleSearch = e => {\n    setSearch(e.target.value)\n  }\n\n  return(\n    <div>\n      <label>Find countries:</label>\n      <input value={search} onChange={handleSearch}/>\n      {search.map((filtered, index) => (<Result key={index} result={filtered}/>))}\n    </div>\n  )\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}