{"ast":null,"code":"var _jsxFileName = \"/Users/stephenwayar/Desktop/ME/CODE/Repos/FullStackOpen/part_2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport SearchResult from \"./components/searchResult.component\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [allCountries, setAllCountries] = useState([]);\n  const [country, setCountry] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"https://restcountries.com/v3.1/all\").then(res => {\n      setCountries(res.data);\n      console.log(\"Promise passed!\");\n    });\n  }, []);\n\n  const handleSearch = e => {\n    setCountry(e.target.value);\n    console.log(country);\n\n    if (country) {\n      const regex = new RegExp(country, 'i');\n\n      const filteredCountries = () => countries.filter(country => country.name.common.match(regex));\n\n      setCountries(filteredCountries);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Find countires:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: country,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), countries]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"kJcqua0ihmRHB5l3bSewQjtgvGo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/stephenwayar/Desktop/ME/CODE/Repos/FullStackOpen/part_2/src/App.js"],"names":["React","useEffect","useState","SearchResult","axios","App","allCountries","setAllCountries","country","setCountry","get","then","res","setCountries","data","console","log","handleSearch","e","target","value","regex","RegExp","filteredCountries","countries","filter","name","common","match"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CAACM,GAAN,CAAU,oCAAV,EAAgDC,IAAhD,CAAqDC,GAAG,IAAI;AAC1DC,MAAAA,YAAY,CAACD,GAAG,CAACE,IAAL,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBT,IAAAA,UAAU,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;;AAEA,QAAIA,OAAJ,EAAa;AACX,YAAMa,KAAK,GAAG,IAAIC,MAAJ,CAAYd,OAAZ,EAAqB,GAArB,CAAd;;AACA,YAAMe,iBAAiB,GAAG,MAAMC,SAAS,CAACC,MAAV,CAAiBjB,OAAO,IAAIA,OAAO,CAACkB,IAAR,CAAaC,MAAb,CAAoBC,KAApB,CAA0BP,KAA1B,CAA5B,CAAhC;;AACAR,MAAAA,YAAY,CAACU,iBAAD,CAAZ;AACD;AACF,GATD;;AAWA,sBACE;AAAA,4BACE;AAAA,6BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,KAAK,EAAEf,OAAd;AAAuB,MAAA,QAAQ,EAAES;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGO,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA9BD;;GAAMnB,G;;KAAAA,G;AA+BN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport SearchResult from \"./components/searchResult.component\";\nimport axios from \"axios\";\n\nconst App = () => {\n\n  const [allCountries, setAllCountries] = useState([])\n  const [country, setCountry] = useState(\"\")\n\n  useEffect(() => {\n    axios.get(\"https://restcountries.com/v3.1/all\").then(res => {\n      setCountries(res.data)\n      console.log(\"Promise passed!\")\n    })\n  }, [])\n\n  const handleSearch = e => {\n    setCountry(e.target.value)\n    console.log(country);\n\n    if (country) {\n      const regex = new RegExp( country, 'i' );\n      const filteredCountries = () => countries.filter(country => country.name.common.match(regex))\n      setCountries(filteredCountries)\n    }\n  }\n\n  return(\n    <div>\n      <label><b>Find countires:</b></label>\n      <input value={country} onChange={handleSearch}/>\n      {countries}\n    </div>\n  )\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}