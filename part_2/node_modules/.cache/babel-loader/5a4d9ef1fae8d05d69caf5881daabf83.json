{"ast":null,"code":"var _jsxFileName = \"/Users/stephenwayar/Desktop/ME/CODE/Repos/FullStackOpen/part_2/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Note from \"./components/note.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Test = () => {\n  _s();\n\n  const [click, setClick] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setClick(click + 1),\n      children: \"click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Test, \"8ML5ng0ughTc50m0TS9XImkt2s8=\");\n\n_c = Test;\n\nconst App = props => {\n  _s2();\n\n  const [notes, setNotes] = useState(props.notes);\n  const [newNotes, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true);\n\n  const addNote = e => {\n    e.preventDefault();\n    const noteObject = {\n      id: notes.lenght + 1,\n      content: newNotes,\n      date: new Date().toDateString,\n      important: Math.random() < 0.5\n    };\n    setNotes(notes.concat(noteObject));\n    setNewNote(\"\");\n  };\n\n  const handleChange = e => {\n    setNewNote(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowAll(!showAll),\n      children: [\"show \", showAll ? \"important\" : \"all\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        id: note.id,\n        note: note\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 35\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Note:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNotes,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"b3zwyeKfkk/t/DDQRjP2zCT/Vzc=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Test\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/stephenwayar/Desktop/ME/CODE/Repos/FullStackOpen/part_2/src/App.js"],"names":["React","useState","Note","Test","click","setClick","App","props","notes","setNotes","newNotes","setNewNote","showAll","setShowAll","notesToShow","filter","note","important","addNote","e","preventDefault","noteObject","id","lenght","content","date","Date","toDateString","Math","random","concat","handleChange","target","value","map"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,6BAAjB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;AAEA,sBACE;AAAA,2BACE;AAAQ,MAAA,OAAO,EAAEI,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CATD;;GAAMD,I;;KAAAA,I;;AAWN,MAAMG,GAAG,GAAIC,KAAD,IAAW;AAAA;;AAErB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACM,KAAK,CAACC,KAAP,CAAlC;AACA,QAAM,CAACE,QAAD,EAAWC,UAAX,IAAyBV,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAMa,WAAW,GAAGF,OAAO,GACvBJ,KADuB,GAEvBA,KAAK,CAACO,MAAN,CAAaC,IAAI,IAAKA,IAAI,CAACC,SAAL,KAAmB,IAAzC,CAFJ;;AAIA,QAAMC,OAAO,GAAGC,CAAC,IAAI;AACnBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,EAAE,EAAEd,KAAK,CAACe,MAAN,GAAe,CADF;AAEjBC,MAAAA,OAAO,EAAEd,QAFQ;AAGjBe,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,YAHA;AAIjBV,MAAAA,SAAS,EAAEW,IAAI,CAACC,MAAL,KAAgB;AAJV,KAAnB;AAMApB,IAAAA,QAAQ,CAACD,KAAK,CAACsB,MAAN,CAAaT,UAAb,CAAD,CAAR;AACAV,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAVD;;AAYA,QAAMoB,YAAY,GAAGZ,CAAC,IAAI;AACxBR,IAAAA,UAAU,CAACQ,CAAC,CAACa,MAAF,CAASC,KAAV,CAAV;AACD,GAFD;;AAIA,sBACE;AAAA,4BAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAOpB,UAAU,CAAC,CAACD,OAAF,CAAlC;AAAA,0BACQA,OAAO,GAAG,WAAH,GAAiB,KADhC;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAA,gBACGE,WAAW,CAACoB,GAAZ,CAAgBlB,IAAI,iBAAK,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEA,IAAI,CAACM,EAAf;AAAmB,QAAA,IAAI,EAAEN;AAAzB;AAAA;AAAA;AAAA;AAAA,cAAzB;AADH;AAAA;AAAA;AAAA;AAAA,YAPF,eAWE;AAAM,MAAA,QAAQ,EAAEE,OAAhB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,KAAK,EAAER,QAAd;AAAwB,QAAA,QAAQ,EAAEqB;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA7CD;;IAAMzB,G;;MAAAA,G;AA8CN,eAAeA,GAAf","sourcesContent":["import React, {useState} from \"react\";\nimport Note from \"./components/note.component\";\n\nconst Test = () => {\n\n  const [click, setClick] = useState(0)\n\n  return(\n    <div>\n      <button onClick={setClick(click + 1)}>click</button>\n    </div>\n  )\n}\n\nconst App = (props) => {\n\n  const [notes, setNotes] = useState(props.notes)\n  const [newNotes, setNewNote] = useState(\"\")\n  const [showAll, setShowAll] = useState(true)\n\n  const notesToShow = showAll \n    ? notes\n    : notes.filter(note => (note.important === true))\n\n  const addNote = e => {\n    e.preventDefault()\n    const noteObject = {\n      id: notes.lenght + 1,\n      content: newNotes,\n      date: new Date().toDateString,\n      important: Math.random() < 0.5\n    }\n    setNotes(notes.concat(noteObject))\n    setNewNote(\"\")\n  }\n\n  const handleChange = e => {\n    setNewNote(e.target.value)\n  }\n\n  return(\n    <div>\n\n      \n      <h1>Notes</h1>\n      <button onClick={() => (setShowAll(!showAll))}>\n        show {showAll ? \"important\" : \"all\"}\n      </button>\n      <ul>\n        {notesToShow.map(note => (<Note id={note.id} note={note}/>))}\n      </ul>\n\n      <form onSubmit={addNote}>\n        <label>Enter Note:</label>\n        <input value={newNotes} onChange={handleChange}/>\n        <button>Submit</button>\n      </form>\n    </div>\n  )\n} \nexport default App;"]},"metadata":{},"sourceType":"module"}