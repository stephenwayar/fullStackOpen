{"ast":null,"code":"var _jsxFileName = \"/Users/stephenwayar/Desktop/ME/CODE/Repos/fullStackOpen/part_2/src/components/note.component.jsx\";\nimport React, { Fragment } from 'react'; // Make reference to this when building e-commerce app.\n// Assume the note component is the item card component.\n// The note prop is the array of all \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Note = _ref => {\n  let {\n    note,\n    toggleImportance\n  } = _ref;\n  const label = note.important ? \"make not important\" : \"make important\";\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: note.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleImportance,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Note;","map":{"version":3,"sources":["/Users/stephenwayar/Desktop/ME/CODE/Repos/fullStackOpen/part_2/src/components/note.component.jsx"],"names":["React","Fragment","Note","note","toggleImportance","label","important","content"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CAEA;AACA;AACA;;;;AAEA,MAAMC,IAAI,GAAG,QAAgC;AAAA,MAA/B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAA+B;AAE3C,QAAMC,KAAK,GAAGF,IAAI,CAACG,SAAL,GAAiB,oBAAjB,GAAwC,gBAAtD;AAEA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA,gBAAKH,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAQ,MAAA,OAAO,EAAEH,gBAAjB;AAAA,gBAAoCC;AAApC;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAXD;;AAaA,eAAeH,IAAf","sourcesContent":["import React, {Fragment} from 'react'\n\n// Make reference to this when building e-commerce app.\n// Assume the note component is the item card component.\n// The note prop is the array of all \n\nconst Note = ({ note, toggleImportance }) => {\n\n  const label = note.important ? \"make not important\" : \"make important\"\n\n  return (\n    <Fragment>\n      <li>{note.content}</li>\n      {/*  */}\n      <button onClick={toggleImportance}>{label}</button>\n    </Fragment>\n  )\n}\n\nexport default Note"]},"metadata":{},"sourceType":"module"}