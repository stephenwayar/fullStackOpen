{"ast":null,"code":"var _jsxFileName = \"/Users/stephenwayar/Desktop/ME/CODE/Repos/FullStackOpen/part_2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Note from \"./components/note.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [notes, setNotes] = React.useState(props.notes);\n  const [newNote, setNewNote] = React.useState(\"\");\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const noteObject = {\n      id: notes.lenght + 1,\n      content: newNote,\n      date: new Date().toISOString,\n      important: Math.random() < 0.5\n    };\n    const rev = noteObject;\n    const nan = setNotes(notes.concat());\n    setNewNote(\"\"); // console.log(\"Button clicked\", event.target)\n  };\n\n  const handleChange = event => {\n    setNewNote(event.target.value); // console.log(newNote);\n  };\n\n  const [count, setCount] = useState(0);\n  const [calc, setCalc] = useState(0);\n  useEffect(() => {\n    setTimeout(() => {\n      setCalc(() => count + 1);\n    }, 1000);\n  }, [count]);\n  console.log(\"count is now \" + count);\n  console.log(\"calculation is now \" + calc);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter new note:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newNote,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"H66qRSQnz5XGWI9JV79ReJVheOQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/stephenwayar/Desktop/ME/CODE/Repos/FullStackOpen/part_2/src/App.js"],"names":["React","useEffect","useState","Note","App","props","notes","setNotes","newNote","setNewNote","handleSubmit","event","preventDefault","noteObject","id","lenght","content","date","Date","toISOString","important","Math","random","rev","nan","concat","handleChange","target","value","count","setCount","calc","setCalc","setTimeout","console","log","map","note"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,6BAAjB;;;AACA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AAErB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACE,QAAN,CAAeG,KAAK,CAACC,KAArB,CAA1B;AAEA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBT,KAAK,CAACE,QAAN,CAAe,EAAf,CAA9B;;AAEA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,EAAE,EAAER,KAAK,CAACS,MAAN,GAAe,CADF;AAEjBC,MAAAA,OAAO,EAAER,OAFQ;AAGjBS,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAHA;AAIjBC,MAAAA,SAAS,EAAEC,IAAI,CAACC,MAAL,KAAgB;AAJV,KAAnB;AAMA,UAAMC,GAAG,GAAGV,UAAZ;AAEA,UAAMW,GAAG,GAAGjB,QAAQ,CAACD,KAAK,CAACmB,MAAN,EAAD,CAApB;AAEAhB,IAAAA,UAAU,CAAC,EAAD,CAAV,CAZ8B,CAa9B;AACD,GAdD;;AAgBA,QAAMiB,YAAY,GAAIf,KAAD,IAAW;AAC9BF,IAAAA,UAAU,CAACE,KAAK,CAACgB,MAAN,CAAaC,KAAd,CAAV,CAD8B,CAE9B;AACD,GAHD;;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB5B,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAAC6B,IAAD,EAAOC,OAAP,IAAkB9B,QAAQ,CAAC,CAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdgC,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,OAAO,CAAC,MAAMH,KAAK,GAAG,CAAf,CAAP;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJQ,EAIN,CAACA,KAAD,CAJM,CAAT;AASAK,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBN,KAA9B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBJ,IAApC;AAEA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMD,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBACGvB,KAAK,CAAC8B,GAAN,CAAUC,IAAI,iBACb,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA;AAA1B,SAAWA,IAAI,CAACvB,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF,eAUE;AAAM,MAAA,QAAQ,EAAEJ,YAAhB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEF,OAA1B;AAAmC,QAAA,QAAQ,EAAEkB;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA7DD;;GAAMtB,G;;KAAAA,G;AA8DN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Note from \"./components/note.component\";\nconst App = (props) => {\n\n  const [notes, setNotes] = React.useState(props.notes)\n\n  const [newNote, setNewNote] = React.useState(\"\")\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      id: notes.lenght + 1,\n      content: newNote,\n      date: new Date().toISOString,\n      important: Math.random() < 0.5\n    }\n    const rev = noteObject\n\n    const nan = setNotes(notes.concat())\n    \n    setNewNote(\"\")\n    // console.log(\"Button clicked\", event.target)\n  }\n  \n  const handleChange = (event) => {\n    setNewNote(event.target.value)\n    // console.log(newNote);\n  }\n \n  const [count, setCount] = useState(0)\n  const [calc, setCalc] = useState(0)\n\n  useEffect(() => {\n    setTimeout(() => {\n      setCalc(() => count + 1)\n    }, 1000)\n  }, [count]\n  )\n\n  \n\n  console.log(\"count is now \" + count)\n  console.log(\"calculation is now \" + calc);\n\n  return(\n    <div>\n      <button onClick={() => setCount(count + 1)}>click</button>\n\n      <h1>Notes</h1>\n      <ul>\n        {notes.map(note => (\n          <Note key={note.id} note={note}/>\n        ))}\n      </ul>\n\n      <form onSubmit={handleSubmit}> \n        <label>Enter new note:</label>\n        <input type=\"text\" value={newNote} onChange={handleChange}/>\n        <br />\n        <button>Submit</button>\n      </form>\n    </div>\n  )\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}