{"ast":null,"code":"var _jsxFileName = \"/Users/stephenwayar/Desktop/ME/CODE/Repos/fullStackOpen/part_2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // import Note from \"./components/note.component\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = ({\n  notes\n}) => {\n  _s();\n\n  const [name, setName] = React.useState(\"\");\n\n  const handleChange = event => {\n    event.target.val;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"gFPpQ6rgfiGkmgRsh4q2nIO1W+Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/stephenwayar/Desktop/ME/CODE/Repos/fullStackOpen/part_2/src/App.js"],"names":["React","App","notes","name","setName","useState","handleChange","event","target","val"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAEzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAAxB;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,MAAN,CAAaC,GAAb;AACD,GAFD;;AAIA,sBACE;AAAA,2BAQE;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEN,IAA1B;AAAgC,QAAA,QAAQ,EAAEG;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAtBD;;GAAML,G;;KAAAA,G;AAwBN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\n// import Note from \"./components/note.component\";\n\nconst App = ({ notes }) => {\n\n  const [name, setName] = React.useState(\"\")\n\n  const handleChange = (event) => {\n    event.target.val\n  }\n\n  return (\n    <div>\n      {/* <h1>Notes</h1>\n      <ul>\n        {notes.map(note => \n            <Note key={note.id} note={note} />\n        )}\n      </ul> */}\n\n      <form>\n        <input type=\"text\" value={name} onChange={handleChange}/>\n      </form>\n    </div>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}